<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/output.css">
  <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
  <link rel="stylesheet" href="/alert/sweetalert2.css">
  <title>Index</title>
</head>

<body class="bg-gray-100">

  <%- include('../template/navbar') %>
    <% const lastValue=value;%>
      <%- include(lastValue) %>





        <script src=" https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js"></script>
        <script src="/flowbite/flowbite.min.js"></script>
        <script src="/flowbite/datepicker.js"></script>
        <script src="/alert/sweetalert2.js"></script>
        <script src="/js/functions.js"></script>
        <script>
          AOS.init();
        </script>

        <script>//SCRIPTS FOR GET DATA FROM DB

          function getMachineNumber() {
            fetch('/admin/get-machine-number')
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(data => {
                let numbersList = document.getElementById('numbersList');
                numbersList.innerHTML = '';

                data.forEach(dataList => {
                  let modalId = `modal_${dataList.makine_id}`;

                  numbersList.innerHTML += `
    <div class="w-full text-sm font-medium text-gray-900 bg-white border border-gray-200 mb-3 rounded-lg dark:bg-gray-700 dark:border-gray-600 dark:text-white">
        <div class="flex justify-between w-full px-4 py-2 border-gray-200 cursor-pointer hover:bg-gray-100 hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:border-gray-600 dark:hover:bg-gray-600 dark:hover:text-white dark:focus:ring-gray-500 dark:focus:text-white">
            <p class="flex items-center">
                ${dataList.makine_numarasi}
            </p>
            <div class="flex items-center space-x-2">
                <!-- Düzenleme butonu/linki -->
                <a id="duzenle" class="font-medium text-blue-600 dark:text-blue-500 hover:underline" onclick="openModal('${modalId}')">Düzenle</a>
                <!-- Silme ikonu -->
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" onclick="deleteMachineNumber(${dataList.makine_id})" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-red-700 rotate-0 hover:rotate-[30deg] transition-all">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </div>
        </div>
    </div>

    
    <!-- Modal -->
            <div id="${modalId}" class="fixed inset-0 z-10 hidden overflow-y-auto">
                <div class="flex items-center justify-center min-h-screen">
                    <div class="bg-black bg-opacity-60 absolute inset-0" onclick="closeModal('${modalId}')"></div>
                    <div class="bg-white p-6 rounded-lg z-20 w-96">
                        <!-- Modal içeriği -->
                        <div class="flex justify-end">
                            <button class="text-gray-600 hover:text-gray-800" onclick="closeModal('${modalId}')">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                        <div class="mt-4">
                            
                                <label for="updateNumber" class="block text-sm font-medium text-gray-700">Yeni Değer:</label>
                                <input type="number" id="updateNumber${dataList.makine_id}" value="${dataList.makine_numarasi}"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                        </div>
                        <button onclick="updateMachineNumber('${dataList.makine_id}')" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Güncelle</button>
                        
                    </div>
                </div>
            </div>
`;
                });

              }).catch(error => {
                console.error('Error during fetch:', error);
              });
          }
          function getMachineName() {
            fetch('/admin/get-machine-name')
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(data => {
               
                let nameList = document.getElementById('nameList');
                nameList.innerHTML = '';
                data.forEach(dataList => {
                  let nameModalId = `modal_${dataList.ad_id}`;
                  nameList.innerHTML += `
          <div  
        class="w-100 text-sm font-medium text-gray-900 bg-white border border-gray-200 mb-3 rounded-lg dark:bg-gray-700 dark:border-gray-600 dark:text-white">
        <div
            class="flex justify-between w-full px-4 py-2   border-gray-200 cursor-pointer hover:bg-gray-100 hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:border-gray-600 dark:hover:bg-gray-600 dark:hover:text-white dark:focus:ring-gray-500 dark:focus:text-white">
            <p  class="flex items-center">
              ${dataList.makine_ad}
            </p>
            <div class="flex items-center space-x-2">
                <!-- Düzenleme butonu/linki -->
                <a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline" onclick="openModal('${nameModalId}')">Düzenle</a>
                <!-- Silme ikonu -->
                <svg xmlns="http://www.w3.org/2000/svg" onclick="deleteMachineName(${dataList.ad_id})" fill="none"
                    viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                    class="w-6 h-6 text-red-700 rotate-0 hover:rotate-[30deg] transition-all">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </div>
        </div>
    </div>
    
    <!-- Modal -->
            <div id="${nameModalId}" class="fixed inset-0 z-10 hidden overflow-y-auto">
                <div class="flex items-center justify-center min-h-screen">
                    <div class="bg-black bg-opacity-60 absolute inset-0" onclick="closeModal('${nameModalId}')"></div>
                    <div class="bg-white p-6 rounded-lg z-20 w-96">
                        <!-- Modal içeriği -->
                        <div class="flex justify-end">
                            <button class="text-gray-600 hover:text-gray-800" onclick="closeModal('${nameModalId}')">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                        <div class="mt-4">
                            
                                <label for="updateNumber" class="block text-sm font-medium text-gray-700">Yeni Değer:</label>
                                <input type="text" id="updateName${dataList.ad_id}" value="${dataList.makine_ad}"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                        </div>
                        <button onclick="updateMachineName('${dataList.ad_id}')" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Güncelle</button>
                        
                    </div>
                </div>
            </div>
    
    `

                });
              })

              .catch(error => {
                console.error('Error during fetch:', error);
              });
          }
          function getProductName() {
            fetch('/admin/get-product-name')
              .then(response => {
                if (!response.ok) {
                  throw new Error('Network response was not ok');
                }
                return response.json();
              })
              .then(data => {
                let productNameList = document.getElementById('productNameList');
                productNameList.innerHTML = '';
                data.forEach(dataList => {
                  let productModalId = `modal_${dataList.urun_id}`;
                  productNameList.innerHTML += `
          <div  
        class="w-100 text-sm font-medium text-gray-900 bg-white border border-gray-200 mb-3 rounded-lg dark:bg-gray-700 dark:border-gray-600 dark:text-white">
        <div
            class="flex justify-between w-full px-4 py-2   border-gray-200 cursor-pointer hover:bg-gray-100 hover:text-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:border-gray-600 dark:hover:bg-gray-600 dark:hover:text-white dark:focus:ring-gray-500 dark:focus:text-white">
            <p  class="flex items-center">
              ${dataList.urun_ad}
            </p>
            <div class="flex items-center space-x-2">
                <!-- Düzenleme butonu/linki -->
                <a href="#" class="font-medium text-blue-600 dark:text-blue-500 hover:underline" onclick="openModal('${productModalId}')">Düzenle</a>
                <!-- Silme ikonu -->
                <svg xmlns="http://www.w3.org/2000/svg" onclick="deleteProductName(${dataList.urun_id})" fill="none"
                    viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                    class="w-6 h-6 text-red-700 rotate-0 hover:rotate-[30deg] transition-all">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </div>
        </div>
    </div>
    
    
    <!-- Modal -->
            <div id="${productModalId}" class="fixed inset-0 z-10 hidden overflow-y-auto">
                <div class="flex items-center justify-center min-h-screen">
                    <div class="bg-black bg-opacity-60 absolute inset-0" onclick="closeModal('${productModalId}')"></div>
                    <div class="bg-white p-6 rounded-lg z-20 w-96">
                        <!-- Modal içeriği -->
                        <div class="flex justify-end">
                            <button class="text-gray-600 hover:text-gray-800" onclick="closeModal('${productModalId}')">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                        <div class="mt-4">
                            
                                <label for="updateNumber" class="block text-sm font-medium text-gray-700">Yeni Değer:</label>
                                <input type="text" id="updateProduct${dataList.urun_id}" value="${dataList.urun_ad}"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" />
                        </div>
                        <button onclick="updateProductName('${dataList.urun_id}')" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Güncelle</button>
                        
                    </div>
                </div>
            </div>
    
    `

                });
              })

              .catch(error => {
                console.error('Error during fetch:', error);
              });
          }


        </script>
        <!-- SCRIPTS FOR UPDATE -->
        <script>
          function updateMachineNumber(makineId) {
            let updatedValue = document.getElementById(`updateNumber${makineId}`).value;

            fetch('/admin/update/number/' + makineId, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ makine_numarasi: updatedValue }),
            })
              .then(response => response.json())
              .then(data => {
                createAlert("Başarılı!", "Numara Güncelleme Başarılı.", "success");
                closeModal(`modal_${data.makine_id}`);
                getMachineNumber();

              })
              .catch(error => {

                createAlert("Hata!", error, "error");
              });
          }
          function updateMachineName(adId) {
            let updatedValue = document.getElementById(`updateName${adId}`).value;

            fetch('/admin/update/name/' + adId, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ makine_adi: updatedValue }),
            })
              .then(response => response.json())
              .then(data => {
                createAlert("Başarılı!", "İsim Güncelleme Başarılı.", "success");
                closeModal(`modal_${data.ad_id}`);
                getMachineName  ();

              })
              .catch(error => {

                createAlert("Hata!", error, "error");
              });
          }
          function updateProductName(urunId) {
            let updatedValue = document.getElementById(`updateProduct${urunId}`).value;

            fetch('/admin/update/product/' + urunId, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ urun_ad: updatedValue }),
            })
              .then(response => response.json())
              .then(data => {
                createAlert("Başarılı!", "İsim Güncelleme Başarılı.", "success");
                closeModal(`modal_${data.urun_id}`);
                getProductName();

              })
              .catch(error => {

                createAlert("Hata!", error, "error");
              });
          }

        </script>

</body>

</html>